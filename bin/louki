#! /usr/bin/env node

var louki = require('../dist/index.js').default;
var program = require('commander');
var path = require('path');

var conf = {};
var appCfg = require('rc')('louki', conf);

program
  .version('0.0.1')
  .arguments('<cmd> [options]')
  .action(function (cmd, options) {
    cmdValue = cmd ;
    optionsValue = options;
  });

program
  .command('build')
  .description('To build the compiled default locale from source');

program
  .command('update')
  .description('To update the source files from the default locale build file');

program
  .option('-w, --watch', 'Watch files (calls build on changes)');


program.parse(process.argv);


if (typeof cmdValue === 'undefined') {
  console.error('no command given!');
  process.exit();
}

else if (! ['update', 'build'].includes(cmdValue)) {
  console.error('Command not supported or recognised');
  process.exit();
}
else {
  if (typeof appCfg.config === 'undefined') {
    console.error('no config file found!');
    process.exit(1);
  }

  var rootPath = path.resolve('./');
  var localeTarget = appCfg.target;
  var localeSource = appCfg.source;
  var defaultLocale = appCfg.default;

  if (typeof localeTarget === 'undefined'
    || typeof localeSource === 'undefined'
    || typeof defaultLocale === 'undefined') {
    console.error('Missing config options! Provide root, source, default');
    process.exit();
  }

  var targetPath = rootPath + '/' + localeTarget;
  var sourcePath = rootPath + '/' + localeSource;

  var extra = {
    pushDefault: optionsValue == defaultLocale,
    watchFiles: program.watch,
  };

  louki(cmdValue, sourcePath, targetPath, optionsValue || defaultLocale, extra);
}
