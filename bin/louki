#! /usr/bin/env node

var louki = require('../dist/index.js').default;
var program = require('commander');
var path = require('path');

var conf = {};
var appCfg = require('rc')('louki', conf);

program
  .version('0.0.1')
  .arguments('<cmd> [options]')
  .action(function (cmd, options) {
    cmdValue = cmd ;
    optionsValue = options;
  });

program
  .command('init')
  .description('To initialise louki with the localeapp secret key. Required argument: secret_key.');

program
  .command('update')
  .description('To update the compiled default locale (without pushing)');

program
  .command('push')
  .description('To push to localeapp using the bash command??');

program
  .command('pull')
  .description('To pull from localeapp and update all files (compiled and src)');

program
  .option('-w, --watch', 'Watch files (calls update on changes)');


program
  .option('-r, --raw', 'Pull without rebuilding sources');

program.parse(process.argv);


if (typeof cmdValue === 'undefined') {
  console.error('no command given!');
  process.exit();
}

else if (! ['update', 'push', 'pull', 'init'].includes(cmdValue)) {
  console.error('Command not supported or recognised');
  process.exit();
}
else {
  if (typeof appCfg.config === 'undefined') {
    console.error('no config file found!');
    process.exit(1);
  }

  var rootPath = path.resolve('./');
  var localeTarget = appCfg.target;
  var localeSource = appCfg.source;
  var defaultLocale = appCfg.default;


  if (cmdValue === 'init' && ! optionsValue) {
    console.error('Localeapp key not specified.');
    process.exit();
  }

  if (typeof localeTarget === 'undefined'
    || typeof localeSource === 'undefined'
    || typeof defaultLocale === 'undefined') {
    console.error('Missing config options! Provide root, source, default');
    process.exit();
  }

  var targetPath = rootPath + '/' + localeTarget;
  var sourcePath = rootPath + '/' + localeSource;

  var extra = {
    pushDefault: optionsValue == defaultLocale,
    watchFiles: program.watch,
    raw: program.raw,
  };

  louki(cmdValue, sourcePath, targetPath, optionsValue || defaultLocale, extra);
}
